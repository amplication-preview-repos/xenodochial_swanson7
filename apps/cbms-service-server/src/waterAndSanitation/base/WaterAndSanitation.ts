/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { ObjectType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import {
  IsBoolean,
  IsOptional,
  IsDate,
  IsEnum,
  IsString,
} from "class-validator";
import { Type } from "class-transformer";
import { EnumWaterAndSanitationFrequencyOfWasteCollection } from "./EnumWaterAndSanitationFrequencyOfWasteCollection";
import { EnumWaterAndSanitationSanitationFacilityType } from "./EnumWaterAndSanitationSanitationFacilityType";
import { EnumWaterAndSanitationWastewaterDisposalMethod } from "./EnumWaterAndSanitationWastewaterDisposalMethod";
import { EnumWaterAndSanitationWaterAvailability } from "./EnumWaterAndSanitationWaterAvailability";
import { EnumWaterAndSanitationWaterQuality } from "./EnumWaterAndSanitationWaterQuality";
import { EnumWaterAndSanitationWaterSource } from "./EnumWaterAndSanitationWaterSource";

@ObjectType()
class WaterAndSanitation {
  @ApiProperty({
    required: false,
    type: Boolean,
  })
  @IsBoolean()
  @IsOptional()
  @Field(() => Boolean, {
    nullable: true,
  })
  accessToSanitationFacility!: boolean | null;

  @ApiProperty({
    required: true,
  })
  @IsDate()
  @Type(() => Date)
  @Field(() => Date)
  createdAt!: Date;

  @ApiProperty({
    required: false,
    enum: EnumWaterAndSanitationFrequencyOfWasteCollection,
  })
  @IsEnum(EnumWaterAndSanitationFrequencyOfWasteCollection)
  @IsOptional()
  @Field(() => EnumWaterAndSanitationFrequencyOfWasteCollection, {
    nullable: true,
  })
  frequencyOfWasteCollection?: "Option1" | null;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  id!: string;

  @ApiProperty({
    required: false,
    enum: EnumWaterAndSanitationSanitationFacilityType,
  })
  @IsEnum(EnumWaterAndSanitationSanitationFacilityType)
  @IsOptional()
  @Field(() => EnumWaterAndSanitationSanitationFacilityType, {
    nullable: true,
  })
  sanitationFacilityType?: "Option1" | null;

  @ApiProperty({
    required: true,
  })
  @IsDate()
  @Type(() => Date)
  @Field(() => Date)
  updatedAt!: Date;

  @ApiProperty({
    required: false,
    enum: EnumWaterAndSanitationWastewaterDisposalMethod,
  })
  @IsEnum(EnumWaterAndSanitationWastewaterDisposalMethod)
  @IsOptional()
  @Field(() => EnumWaterAndSanitationWastewaterDisposalMethod, {
    nullable: true,
  })
  wastewaterDisposalMethod?: "Option1" | null;

  @ApiProperty({
    required: false,
    enum: EnumWaterAndSanitationWaterAvailability,
  })
  @IsEnum(EnumWaterAndSanitationWaterAvailability)
  @IsOptional()
  @Field(() => EnumWaterAndSanitationWaterAvailability, {
    nullable: true,
  })
  waterAvailability?: "Option1" | null;

  @ApiProperty({
    required: false,
    enum: EnumWaterAndSanitationWaterQuality,
  })
  @IsEnum(EnumWaterAndSanitationWaterQuality)
  @IsOptional()
  @Field(() => EnumWaterAndSanitationWaterQuality, {
    nullable: true,
  })
  waterQuality?: "Option1" | null;

  @ApiProperty({
    required: false,
    enum: EnumWaterAndSanitationWaterSource,
  })
  @IsEnum(EnumWaterAndSanitationWaterSource)
  @IsOptional()
  @Field(() => EnumWaterAndSanitationWaterSource, {
    nullable: true,
  })
  waterSource?: "Option1" | null;
}

export { WaterAndSanitation as WaterAndSanitation };
