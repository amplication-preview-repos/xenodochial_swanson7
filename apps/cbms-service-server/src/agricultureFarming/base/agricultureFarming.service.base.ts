/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  AgricultureFarming as PrismaAgricultureFarming,
} from "@prisma/client";

export class AgricultureFarmingServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.AgricultureFarmingCountArgs, "select">
  ): Promise<number> {
    return this.prisma.agricultureFarming.count(args);
  }

  async agricultureFarmings(
    args: Prisma.AgricultureFarmingFindManyArgs
  ): Promise<PrismaAgricultureFarming[]> {
    return this.prisma.agricultureFarming.findMany(args);
  }
  async agricultureFarming(
    args: Prisma.AgricultureFarmingFindUniqueArgs
  ): Promise<PrismaAgricultureFarming | null> {
    return this.prisma.agricultureFarming.findUnique(args);
  }
  async createAgricultureFarming(
    args: Prisma.AgricultureFarmingCreateArgs
  ): Promise<PrismaAgricultureFarming> {
    return this.prisma.agricultureFarming.create(args);
  }
  async updateAgricultureFarming(
    args: Prisma.AgricultureFarmingUpdateArgs
  ): Promise<PrismaAgricultureFarming> {
    return this.prisma.agricultureFarming.update(args);
  }
  async deleteAgricultureFarming(
    args: Prisma.AgricultureFarmingDeleteArgs
  ): Promise<PrismaAgricultureFarming> {
    return this.prisma.agricultureFarming.delete(args);
  }
}
