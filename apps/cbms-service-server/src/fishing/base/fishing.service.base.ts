/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Fishing as PrismaFishing } from "@prisma/client";

export class FishingServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.FishingCountArgs, "select">): Promise<number> {
    return this.prisma.fishing.count(args);
  }

  async fishings(args: Prisma.FishingFindManyArgs): Promise<PrismaFishing[]> {
    return this.prisma.fishing.findMany(args);
  }
  async fishing(
    args: Prisma.FishingFindUniqueArgs
  ): Promise<PrismaFishing | null> {
    return this.prisma.fishing.findUnique(args);
  }
  async createFishing(args: Prisma.FishingCreateArgs): Promise<PrismaFishing> {
    return this.prisma.fishing.create(args);
  }
  async updateFishing(args: Prisma.FishingUpdateArgs): Promise<PrismaFishing> {
    return this.prisma.fishing.update(args);
  }
  async deleteFishing(args: Prisma.FishingDeleteArgs): Promise<PrismaFishing> {
    return this.prisma.fishing.delete(args);
  }
}
