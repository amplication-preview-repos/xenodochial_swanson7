/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Crime as PrismaCrime } from "@prisma/client";

export class CrimeServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.CrimeCountArgs, "select">): Promise<number> {
    return this.prisma.crime.count(args);
  }

  async crimes(args: Prisma.CrimeFindManyArgs): Promise<PrismaCrime[]> {
    return this.prisma.crime.findMany(args);
  }
  async crime(args: Prisma.CrimeFindUniqueArgs): Promise<PrismaCrime | null> {
    return this.prisma.crime.findUnique(args);
  }
  async createCrime(args: Prisma.CrimeCreateArgs): Promise<PrismaCrime> {
    return this.prisma.crime.create(args);
  }
  async updateCrime(args: Prisma.CrimeUpdateArgs): Promise<PrismaCrime> {
    return this.prisma.crime.update(args);
  }
  async deleteCrime(args: Prisma.CrimeDeleteArgs): Promise<PrismaCrime> {
    return this.prisma.crime.delete(args);
  }
}
