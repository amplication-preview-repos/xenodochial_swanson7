/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  EconomicActivity as PrismaEconomicActivity,
} from "@prisma/client";

export class EconomicActivityServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.EconomicActivityCountArgs, "select">
  ): Promise<number> {
    return this.prisma.economicActivity.count(args);
  }

  async economicActivities(
    args: Prisma.EconomicActivityFindManyArgs
  ): Promise<PrismaEconomicActivity[]> {
    return this.prisma.economicActivity.findMany(args);
  }
  async economicActivity(
    args: Prisma.EconomicActivityFindUniqueArgs
  ): Promise<PrismaEconomicActivity | null> {
    return this.prisma.economicActivity.findUnique(args);
  }
  async createEconomicActivity(
    args: Prisma.EconomicActivityCreateArgs
  ): Promise<PrismaEconomicActivity> {
    return this.prisma.economicActivity.create(args);
  }
  async updateEconomicActivity(
    args: Prisma.EconomicActivityUpdateArgs
  ): Promise<PrismaEconomicActivity> {
    return this.prisma.economicActivity.update(args);
  }
  async deleteEconomicActivity(
    args: Prisma.EconomicActivityDeleteArgs
  ): Promise<PrismaEconomicActivity> {
    return this.prisma.economicActivity.delete(args);
  }
}
