/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { IntNullableFilter } from "../../util/IntNullableFilter";
import { Type } from "class-transformer";
import { IsOptional, IsEnum } from "class-validator";
import { StringNullableFilter } from "../../util/StringNullableFilter";
import { BooleanNullableFilter } from "../../util/BooleanNullableFilter";
import { EnumDemographyEducationalAttainment } from "./EnumDemographyEducationalAttainment";
import { EnumDemographyEmploymentStatus } from "./EnumDemographyEmploymentStatus";
import { EnumDemographyGender } from "./EnumDemographyGender";
import { StringFilter } from "../../util/StringFilter";
import { EnumDemographyMaritalStatus } from "./EnumDemographyMaritalStatus";

@InputType()
class DemographyWhereInput {
  @ApiProperty({
    required: false,
    type: IntNullableFilter,
  })
  @Type(() => IntNullableFilter)
  @IsOptional()
  @Field(() => IntNullableFilter, {
    nullable: true,
  })
  age?: IntNullableFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  citizenship?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: BooleanNullableFilter,
  })
  @Type(() => BooleanNullableFilter)
  @IsOptional()
  @Field(() => BooleanNullableFilter, {
    nullable: true,
  })
  disabilityStatus?: BooleanNullableFilter;

  @ApiProperty({
    required: false,
    enum: EnumDemographyEducationalAttainment,
  })
  @IsEnum(EnumDemographyEducationalAttainment)
  @IsOptional()
  @Field(() => EnumDemographyEducationalAttainment, {
    nullable: true,
  })
  educationalAttainment?: "Option1";

  @ApiProperty({
    required: false,
    enum: EnumDemographyEmploymentStatus,
  })
  @IsEnum(EnumDemographyEmploymentStatus)
  @IsOptional()
  @Field(() => EnumDemographyEmploymentStatus, {
    nullable: true,
  })
  employmentStatus?: "Option1";

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  ethnicity?: StringNullableFilter;

  @ApiProperty({
    required: false,
    enum: EnumDemographyGender,
  })
  @IsEnum(EnumDemographyGender)
  @IsOptional()
  @Field(() => EnumDemographyGender, {
    nullable: true,
  })
  gender?: "Option1";

  @ApiProperty({
    required: false,
    type: StringFilter,
  })
  @Type(() => StringFilter)
  @IsOptional()
  @Field(() => StringFilter, {
    nullable: true,
  })
  id?: StringFilter;

  @ApiProperty({
    required: false,
    enum: EnumDemographyMaritalStatus,
  })
  @IsEnum(EnumDemographyMaritalStatus)
  @IsOptional()
  @Field(() => EnumDemographyMaritalStatus, {
    nullable: true,
  })
  maritalStatus?: "Option1";
}

export { DemographyWhereInput as DemographyWhereInput };
