/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Nutrition as PrismaNutrition } from "@prisma/client";

export class NutritionServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.NutritionCountArgs, "select">
  ): Promise<number> {
    return this.prisma.nutrition.count(args);
  }

  async nutritions(
    args: Prisma.NutritionFindManyArgs
  ): Promise<PrismaNutrition[]> {
    return this.prisma.nutrition.findMany(args);
  }
  async nutrition(
    args: Prisma.NutritionFindUniqueArgs
  ): Promise<PrismaNutrition | null> {
    return this.prisma.nutrition.findUnique(args);
  }
  async createNutrition(
    args: Prisma.NutritionCreateArgs
  ): Promise<PrismaNutrition> {
    return this.prisma.nutrition.create(args);
  }
  async updateNutrition(
    args: Prisma.NutritionUpdateArgs
  ): Promise<PrismaNutrition> {
    return this.prisma.nutrition.update(args);
  }
  async deleteNutrition(
    args: Prisma.NutritionDeleteArgs
  ): Promise<PrismaNutrition> {
    return this.prisma.nutrition.delete(args);
  }
}
