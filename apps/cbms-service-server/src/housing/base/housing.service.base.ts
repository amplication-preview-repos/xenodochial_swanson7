/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Housing as PrismaHousing } from "@prisma/client";

export class HousingServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.HousingCountArgs, "select">): Promise<number> {
    return this.prisma.housing.count(args);
  }

  async housings(args: Prisma.HousingFindManyArgs): Promise<PrismaHousing[]> {
    return this.prisma.housing.findMany(args);
  }
  async housing(
    args: Prisma.HousingFindUniqueArgs
  ): Promise<PrismaHousing | null> {
    return this.prisma.housing.findUnique(args);
  }
  async createHousing(args: Prisma.HousingCreateArgs): Promise<PrismaHousing> {
    return this.prisma.housing.create(args);
  }
  async updateHousing(args: Prisma.HousingUpdateArgs): Promise<PrismaHousing> {
    return this.prisma.housing.update(args);
  }
  async deleteHousing(args: Prisma.HousingDeleteArgs): Promise<PrismaHousing> {
    return this.prisma.housing.delete(args);
  }
}
