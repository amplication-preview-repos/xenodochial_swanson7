/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { EnumHousingConstructionMaterial } from "./EnumHousingConstructionMaterial";
import { IsEnum, IsOptional } from "class-validator";
import { BooleanNullableFilter } from "../../util/BooleanNullableFilter";
import { Type } from "class-transformer";
import { EnumHousingHouseType } from "./EnumHousingHouseType";
import { StringFilter } from "../../util/StringFilter";
import { EnumHousingNeighborhoodType } from "./EnumHousingNeighborhoodType";
import { IntNullableFilter } from "../../util/IntNullableFilter";
import { EnumHousingOwnershipStatus } from "./EnumHousingOwnershipStatus";
import { StringNullableFilter } from "../../util/StringNullableFilter";

@InputType()
class HousingWhereInput {
  @ApiProperty({
    required: false,
    enum: EnumHousingConstructionMaterial,
  })
  @IsEnum(EnumHousingConstructionMaterial)
  @IsOptional()
  @Field(() => EnumHousingConstructionMaterial, {
    nullable: true,
  })
  constructionMaterial?: "Option1";

  @ApiProperty({
    required: false,
    type: BooleanNullableFilter,
  })
  @Type(() => BooleanNullableFilter)
  @IsOptional()
  @Field(() => BooleanNullableFilter, {
    nullable: true,
  })
  electricityAccess?: BooleanNullableFilter;

  @ApiProperty({
    required: false,
    enum: EnumHousingHouseType,
  })
  @IsEnum(EnumHousingHouseType)
  @IsOptional()
  @Field(() => EnumHousingHouseType, {
    nullable: true,
  })
  houseType?: "Option1";

  @ApiProperty({
    required: false,
    type: StringFilter,
  })
  @Type(() => StringFilter)
  @IsOptional()
  @Field(() => StringFilter, {
    nullable: true,
  })
  id?: StringFilter;

  @ApiProperty({
    required: false,
    enum: EnumHousingNeighborhoodType,
  })
  @IsEnum(EnumHousingNeighborhoodType)
  @IsOptional()
  @Field(() => EnumHousingNeighborhoodType, {
    nullable: true,
  })
  neighborhoodType?: "Option1";

  @ApiProperty({
    required: false,
    type: IntNullableFilter,
  })
  @Type(() => IntNullableFilter)
  @IsOptional()
  @Field(() => IntNullableFilter, {
    nullable: true,
  })
  numberOfRooms?: IntNullableFilter;

  @ApiProperty({
    required: false,
    enum: EnumHousingOwnershipStatus,
  })
  @IsEnum(EnumHousingOwnershipStatus)
  @IsOptional()
  @Field(() => EnumHousingOwnershipStatus, {
    nullable: true,
  })
  ownershipStatus?: "Option1";

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  proximityToEssentialServices?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: IntNullableFilter,
  })
  @Type(() => IntNullableFilter)
  @IsOptional()
  @Field(() => IntNullableFilter, {
    nullable: true,
  })
  yearBuilt?: IntNullableFilter;
}

export { HousingWhereInput as HousingWhereInput };
