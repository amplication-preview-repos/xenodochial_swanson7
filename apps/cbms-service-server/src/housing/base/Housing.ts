/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { ObjectType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { EnumHousingConstructionMaterial } from "./EnumHousingConstructionMaterial";

import {
  IsEnum,
  IsOptional,
  IsDate,
  IsBoolean,
  IsString,
  IsInt,
  Min,
  Max,
  MaxLength,
} from "class-validator";

import { Type } from "class-transformer";
import { EnumHousingHouseType } from "./EnumHousingHouseType";
import { EnumHousingNeighborhoodType } from "./EnumHousingNeighborhoodType";
import { EnumHousingOwnershipStatus } from "./EnumHousingOwnershipStatus";

@ObjectType()
class Housing {
  @ApiProperty({
    required: false,
    enum: EnumHousingConstructionMaterial,
  })
  @IsEnum(EnumHousingConstructionMaterial)
  @IsOptional()
  @Field(() => EnumHousingConstructionMaterial, {
    nullable: true,
  })
  constructionMaterial?: "Option1" | null;

  @ApiProperty({
    required: true,
  })
  @IsDate()
  @Type(() => Date)
  @Field(() => Date)
  createdAt!: Date;

  @ApiProperty({
    required: false,
    type: Boolean,
  })
  @IsBoolean()
  @IsOptional()
  @Field(() => Boolean, {
    nullable: true,
  })
  electricityAccess!: boolean | null;

  @ApiProperty({
    required: false,
    enum: EnumHousingHouseType,
  })
  @IsEnum(EnumHousingHouseType)
  @IsOptional()
  @Field(() => EnumHousingHouseType, {
    nullable: true,
  })
  houseType?: "Option1" | null;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  id!: string;

  @ApiProperty({
    required: false,
    enum: EnumHousingNeighborhoodType,
  })
  @IsEnum(EnumHousingNeighborhoodType)
  @IsOptional()
  @Field(() => EnumHousingNeighborhoodType, {
    nullable: true,
  })
  neighborhoodType?: "Option1" | null;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsInt()
  @Min(-999999999)
  @Max(999999999)
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  numberOfRooms!: number | null;

  @ApiProperty({
    required: false,
    enum: EnumHousingOwnershipStatus,
  })
  @IsEnum(EnumHousingOwnershipStatus)
  @IsOptional()
  @Field(() => EnumHousingOwnershipStatus, {
    nullable: true,
  })
  ownershipStatus?: "Option1" | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  proximityToEssentialServices!: string | null;

  @ApiProperty({
    required: true,
  })
  @IsDate()
  @Type(() => Date)
  @Field(() => Date)
  updatedAt!: Date;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsInt()
  @Min(-999999999)
  @Max(999999999)
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  yearBuilt!: number | null;
}

export { Housing as Housing };
