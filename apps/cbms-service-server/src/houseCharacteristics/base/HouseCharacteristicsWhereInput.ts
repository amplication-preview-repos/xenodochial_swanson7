/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { EnumHouseCharacteristicsConstructionMaterial } from "./EnumHouseCharacteristicsConstructionMaterial";
import { IsEnum, IsOptional } from "class-validator";
import { BooleanNullableFilter } from "../../util/BooleanNullableFilter";
import { Type } from "class-transformer";
import { EnumHouseCharacteristicsHouseType } from "./EnumHouseCharacteristicsHouseType";
import { StringFilter } from "../../util/StringFilter";
import { IntNullableFilter } from "../../util/IntNullableFilter";
import { EnumHouseCharacteristicsOwnershipStatus } from "./EnumHouseCharacteristicsOwnershipStatus";
import { EnumHouseCharacteristicsSanitationFacility } from "./EnumHouseCharacteristicsSanitationFacility";
import { EnumHouseCharacteristicsWaterSupply } from "./EnumHouseCharacteristicsWaterSupply";

@InputType()
class HouseCharacteristicsWhereInput {
  @ApiProperty({
    required: false,
    enum: EnumHouseCharacteristicsConstructionMaterial,
  })
  @IsEnum(EnumHouseCharacteristicsConstructionMaterial)
  @IsOptional()
  @Field(() => EnumHouseCharacteristicsConstructionMaterial, {
    nullable: true,
  })
  constructionMaterial?: "Option1";

  @ApiProperty({
    required: false,
    type: BooleanNullableFilter,
  })
  @Type(() => BooleanNullableFilter)
  @IsOptional()
  @Field(() => BooleanNullableFilter, {
    nullable: true,
  })
  electricityAccess?: BooleanNullableFilter;

  @ApiProperty({
    required: false,
    enum: EnumHouseCharacteristicsHouseType,
  })
  @IsEnum(EnumHouseCharacteristicsHouseType)
  @IsOptional()
  @Field(() => EnumHouseCharacteristicsHouseType, {
    nullable: true,
  })
  houseType?: "Option1";

  @ApiProperty({
    required: false,
    type: StringFilter,
  })
  @Type(() => StringFilter)
  @IsOptional()
  @Field(() => StringFilter, {
    nullable: true,
  })
  id?: StringFilter;

  @ApiProperty({
    required: false,
    type: IntNullableFilter,
  })
  @Type(() => IntNullableFilter)
  @IsOptional()
  @Field(() => IntNullableFilter, {
    nullable: true,
  })
  numberOfRooms?: IntNullableFilter;

  @ApiProperty({
    required: false,
    enum: EnumHouseCharacteristicsOwnershipStatus,
  })
  @IsEnum(EnumHouseCharacteristicsOwnershipStatus)
  @IsOptional()
  @Field(() => EnumHouseCharacteristicsOwnershipStatus, {
    nullable: true,
  })
  ownershipStatus?: "Option1";

  @ApiProperty({
    required: false,
    enum: EnumHouseCharacteristicsSanitationFacility,
  })
  @IsEnum(EnumHouseCharacteristicsSanitationFacility)
  @IsOptional()
  @Field(() => EnumHouseCharacteristicsSanitationFacility, {
    nullable: true,
  })
  sanitationFacility?: "Option1";

  @ApiProperty({
    required: false,
    enum: EnumHouseCharacteristicsWaterSupply,
  })
  @IsEnum(EnumHouseCharacteristicsWaterSupply)
  @IsOptional()
  @Field(() => EnumHouseCharacteristicsWaterSupply, {
    nullable: true,
  })
  waterSupply?: "Option1";

  @ApiProperty({
    required: false,
    type: IntNullableFilter,
  })
  @Type(() => IntNullableFilter)
  @IsOptional()
  @Field(() => IntNullableFilter, {
    nullable: true,
  })
  yearBuilt?: IntNullableFilter;
}

export { HouseCharacteristicsWhereInput as HouseCharacteristicsWhereInput };
