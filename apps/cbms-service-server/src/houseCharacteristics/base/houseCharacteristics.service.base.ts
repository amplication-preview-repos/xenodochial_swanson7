/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  HouseCharacteristics as PrismaHouseCharacteristics,
} from "@prisma/client";

export class HouseCharacteristicsServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.HouseCharacteristicsCountArgs, "select">
  ): Promise<number> {
    return this.prisma.houseCharacteristics.count(args);
  }

  async houseCharacteristicsItems(
    args: Prisma.HouseCharacteristicsFindManyArgs
  ): Promise<PrismaHouseCharacteristics[]> {
    return this.prisma.houseCharacteristics.findMany(args);
  }
  async houseCharacteristics(
    args: Prisma.HouseCharacteristicsFindUniqueArgs
  ): Promise<PrismaHouseCharacteristics | null> {
    return this.prisma.houseCharacteristics.findUnique(args);
  }
  async createHouseCharacteristics(
    args: Prisma.HouseCharacteristicsCreateArgs
  ): Promise<PrismaHouseCharacteristics> {
    return this.prisma.houseCharacteristics.create(args);
  }
  async updateHouseCharacteristics(
    args: Prisma.HouseCharacteristicsUpdateArgs
  ): Promise<PrismaHouseCharacteristics> {
    return this.prisma.houseCharacteristics.update(args);
  }
  async deleteHouseCharacteristics(
    args: Prisma.HouseCharacteristicsDeleteArgs
  ): Promise<PrismaHouseCharacteristics> {
    return this.prisma.houseCharacteristics.delete(args);
  }
}
