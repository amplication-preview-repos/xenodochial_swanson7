/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  LivestockRaising as PrismaLivestockRaising,
} from "@prisma/client";

export class LivestockRaisingServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.LivestockRaisingCountArgs, "select">
  ): Promise<number> {
    return this.prisma.livestockRaising.count(args);
  }

  async livestockRaisings(
    args: Prisma.LivestockRaisingFindManyArgs
  ): Promise<PrismaLivestockRaising[]> {
    return this.prisma.livestockRaising.findMany(args);
  }
  async livestockRaising(
    args: Prisma.LivestockRaisingFindUniqueArgs
  ): Promise<PrismaLivestockRaising | null> {
    return this.prisma.livestockRaising.findUnique(args);
  }
  async createLivestockRaising(
    args: Prisma.LivestockRaisingCreateArgs
  ): Promise<PrismaLivestockRaising> {
    return this.prisma.livestockRaising.create(args);
  }
  async updateLivestockRaising(
    args: Prisma.LivestockRaisingUpdateArgs
  ): Promise<PrismaLivestockRaising> {
    return this.prisma.livestockRaising.update(args);
  }
  async deleteLivestockRaising(
    args: Prisma.LivestockRaisingDeleteArgs
  ): Promise<PrismaLivestockRaising> {
    return this.prisma.livestockRaising.delete(args);
  }
}
