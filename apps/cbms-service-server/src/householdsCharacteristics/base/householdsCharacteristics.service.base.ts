/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  HouseholdsCharacteristics as PrismaHouseholdsCharacteristics,
} from "@prisma/client";

export class HouseholdsCharacteristicsServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.HouseholdsCharacteristicsCountArgs, "select">
  ): Promise<number> {
    return this.prisma.householdsCharacteristics.count(args);
  }

  async householdsCharacteristicsItems(
    args: Prisma.HouseholdsCharacteristicsFindManyArgs
  ): Promise<PrismaHouseholdsCharacteristics[]> {
    return this.prisma.householdsCharacteristics.findMany(args);
  }
  async householdsCharacteristics(
    args: Prisma.HouseholdsCharacteristicsFindUniqueArgs
  ): Promise<PrismaHouseholdsCharacteristics | null> {
    return this.prisma.householdsCharacteristics.findUnique(args);
  }
  async createHouseholdsCharacteristics(
    args: Prisma.HouseholdsCharacteristicsCreateArgs
  ): Promise<PrismaHouseholdsCharacteristics> {
    return this.prisma.householdsCharacteristics.create(args);
  }
  async updateHouseholdsCharacteristics(
    args: Prisma.HouseholdsCharacteristicsUpdateArgs
  ): Promise<PrismaHouseholdsCharacteristics> {
    return this.prisma.householdsCharacteristics.update(args);
  }
  async deleteHouseholdsCharacteristics(
    args: Prisma.HouseholdsCharacteristicsDeleteArgs
  ): Promise<PrismaHouseholdsCharacteristics> {
    return this.prisma.householdsCharacteristics.delete(args);
  }
}
